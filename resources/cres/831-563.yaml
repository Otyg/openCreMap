doctype: CRE
id: 831-563
links:
- document:
    doctype: Standard
    hyperlink: https://github.com/OWASP/ASVS/blob/v4.0.3/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md
    name: ASVS
    section: Verify that deserialization of untrusted data is avoided or is protected
      in both custom code and third-party libraries (such as JSON, XML and YAML parsers).
    sectionID: V5.5.3
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://cwe.mitre.org/data/definitions/502.html
    name: CWE
    section: ''
    sectionID: '502'
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html
    name: OWASP Cheat Sheets
    section: Deserialization Cheat Sheet
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
    name: OWASP Cheat Sheets
    section: XML External Entity Prevention Cheat Sheet
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://cheatsheetseries.owasp.org/cheatsheets/XML_Security_Cheat_Sheet.html
    name: OWASP Cheat Sheets
    section: XML Security Cheat Sheet
  ltype: Linked To
- document:
    description: Deserialization of untrusted data is inherently dangerous and should
      be avoided.
    doctype: Tool
    hyperlink: https://github.com/zaproxy/zap-extensions/blob/main/addOns/pscanrulesBeta/src/main/java/org/zaproxy/zap/extension/pscanrulesBeta/JsoScanRule.java
    name: ZAP Rule
    section: Java Serialization Object
    sectionID: '90002'
    tags:
    - Passive
    - '90002'
    tooltype: Offensive
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://capec.mitre.org/data/definitions/586.html
    name: CAPEC
    section: Object Injection
    sectionID: '586'
    version: '3.9'
  ltype: SAME
- document:
    doctype: CRE
    id: 836-068
    name: Deserialization Prevention
  ltype: Is Part Of
name: Avoid deserialization logic
